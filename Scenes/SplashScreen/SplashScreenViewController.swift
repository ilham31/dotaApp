//
//  SplashScreenViewController.swift
//  dota
//
//  Created by Muhammad Ilham Ramadhan on 23/07/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SplashScreenDisplayLogic: class {
    func successLoadData()
    func errorLoadData()
}

class SplashScreenViewController: UIViewController {
    @IBOutlet weak var splashScreenImageView: UIImageView!
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    
    var interactor: SplashScreenBusinessLogic?
    var router: (NSObjectProtocol & SplashScreenRoutingLogic)?
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    private func setup() {
        let viewController = self
        let interactor = SplashScreenInteractor()
        let presenter = SplashScreenPresenter()
        let router = SplashScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: animated)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        interactor?.getHeroData()
    }
}

//MARK: - Setup View
extension SplashScreenViewController {
    private func setupView() {
        setupImageAlpha()
        setupActivityIndicator()
    }
    
    private func setupImageAlpha() {
        splashScreenImageView.alpha = 0.8
    }
    
    private func setupActivityIndicator() {
        activityIndicator.startAnimating()
    }
}

//MARK: - Method
extension SplashScreenViewController {
    private func displayErrorAlert() {
        let retryAlert = UIAlertController(title: "Fetch Data Failed", message: "Please wait a few minutes before you try again or check your internet connection ", preferredStyle: UIAlertController.Style.alert)
        
        retryAlert.addAction(UIAlertAction(title: "Retry", style: .default, handler: { [weak self] _ in
            self?.interactor?.getHeroData()
        }))
        
        self.present(retryAlert, animated: true, completion: nil)
    }
}

//MARK: - Splash Screen Display Logic
extension SplashScreenViewController: SplashScreenDisplayLogic {
    func successLoadData() {
        router?.routeToHeroListViewController(viewController: self)
    }
    
    func errorLoadData() {
        displayErrorAlert()
    }
}
