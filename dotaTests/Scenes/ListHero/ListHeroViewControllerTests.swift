//
//  ListHeroViewControllerTests.swift
//  dota
//
//  Created by Muhammad Ilham Ramadhan on 27/07/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import dota
import XCTest

class ListHeroViewControllerTests: XCTestCase {
    class ListHeroInteractorMock: ListHeroBusinessLogic {
        var getAllRolesCalled = false
        var getHeroBasedOnRolesCalled = false
        
        func getAllRoles() {
            getAllRolesCalled = true
        }
        
        func getHeroBasedOnRoles(key: String) {
            getHeroBasedOnRolesCalled = true
        }
    }
    
    var viewController: ListHeroViewController!
    var interactor: ListHeroInteractorMock!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupListHeroViewController()
        interactor = ListHeroInteractorMock()
        
        viewController.interactor = interactor
    }
    
    override func tearDown() {
        window = nil
        viewController = nil
        interactor = nil
        super.tearDown()
    }
    
    func setupListHeroViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "ListHero", bundle: bundle)
        viewController = storyboard.instantiateViewController(withIdentifier: "ListHero") as? ListHeroViewController
    }
    
    func loadView() {
        window.addSubview(viewController.view)
    }
    
    func testShouldDoSomethingWhenViewIsLoaded() {
        //When
        loadView()
        
        //Then
        XCTAssertTrue(interactor.getAllRolesCalled, "getAllRoles should be called")
    }
    
    func testGetHeroBasedOnRole() {
        //Given
        let indexPath = IndexPath(row: 0, section: 0)
        viewController.rolesTableView = UITableView()
        loadView()
        
        //When
        viewController.displayRoles(roles: [""])
        let _ = viewController.tableView(viewController.rolesTableView, didSelectRowAt: indexPath)
        
        //then
        XCTAssertTrue(interactor.getHeroBasedOnRolesCalled, "getHeroBasedOnRoles should be called")
    }
}
